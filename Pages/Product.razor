@using FAKA.Client.Models
@inject HttpClient Http

@page "/Product"
<PageTitle>产品购买</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">产品购买</MudText>
@if (ProductGroups == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Centered="true">
        @foreach (var group in ProductGroups)
        {
            <MudTabPanel Text="@group.Name" OnClick="() => SelectProductGroup(group)">
                @if (SelectedProductGroup?.Products == null)
                {
                    <MudTabPanel>
                        <MudText Typo="Typo.subtitle1" GutterBottom="true">暂无产品</MudText>
                    </MudTabPanel>
                }
                else
                {
                    <MudGrid Justify="Justify.Center">
                        @foreach(var product in SelectedProductGroup.Products)
                        {
                            <MudItem xs="12" sm="6" md="4" lg="3">
                                <MudCard>
                                    <MudCardHeader>
                                        <MudText Typo="Typo.h6">@product.Name</MudText>
                                        <MudSpacer />
                                        <MudText Typo="Typo.h6">库存：@product.Stock</MudText>
                                    </MudCardHeader>
                                    <MudDivider />
                                    <MudCardContent Style="height: 150px; overflow: auto;">
                                        <MudText Typo="Typo.subtitle1" GutterBottom="true">@product.Description</MudText>
                                    </MudCardContent>
                                    <MudDivider />
                                    <MudCardActions>
                                        <MudText Typo="Typo.subtitle1" GutterBottom="true">库存：@product.Stock</MudText>
                                        <MudSpacer/>
                                        <MudButton Color="Color.Primary" Variant="Variant.Outlined" Size="Size.Small" OnClick="() => Console.WriteLine(product.Id)">购买</MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        }
                    </MudGrid>
                }
            </MudTabPanel>
        }
    </MudTabs>
}

@code {
    private List<ProductGroup>? ProductGroups { get; set; }
    private ProductGroup? SelectedProductGroup { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<ProductGroupResponse>("/api/v1/public/ProductGroups");
        ProductGroups = response?.Data;
        SelectedProductGroup = ProductGroups?.FirstOrDefault();
    }
    
    private void SelectProductGroup(ProductGroup group)
    {
        SelectedProductGroup = group;
    }
}